import{_ as p}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as t,c as e,a as n,b as s,d as o,e as c,r as l}from"./app.bea16527.js";const i={},u=c(`<p>\u5728\u8FD9\u7BC7\u6559\u7A0B\u91CC\uFF0C\u6211\u5C06\u4F7F\u7528\u5B9E\u9645\u7684\u4F8B\u5B50\u6765\u4ECB\u7ECD\u4E00\u4E9B\u5E38\u7528\u7684PHP\u6570\u7EC4\u53CA\u5176\u6700\u4F73\u5B9E\u8DF5\u3002\u6BCF\u4E2APHP\u5F00\u53D1\u8005\u90FD\u5FC5\u987B\u77E5\u9053\u5982\u4F55\u4F7F\u7528\u4ED6\u4EEC\uFF0C\u5E76\u4E14\u7EC4\u5408\u4F7F\u7528\u8FD9\u4E9B\u6570\u7EC4\u51FD\u6570\u5199\u51FA\u53EF\u8BFB\u6027\u597D\u3001\u7B80\u6D01\u7684\u4EE3\u7801\u3002</p><h2 id="\u57FA\u672C" tabindex="-1"><a class="header-anchor" href="#\u57FA\u672C" aria-hidden="true">#</a> \u57FA\u672C</h2><p>\u8BA9\u6211\u4EEC\u4ECE\u6700\u57FA\u672C\u7684\u5904\u7406\u6570\u7EC4\u952E\u503C\u7684\u51FD\u6570\u5F00\u59CB\u5427\u3002\u9996\u5148\u662F array_combine()\uFF0C\u5B83\u4F7F\u7528\u4E00\u4E2A\u6570\u7EC4\u505A\u952E\uFF0C\u4E00\u4E2A\u6570\u7EC4\u505A\u503C\uFF0C\u521B\u5EFA\u4E00\u4E2A\u65B0\u7684\u6570\u7EC4\uFF1A</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token variable">$keys</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;sky&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;grass&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;orange&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token variable">$values</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;blue&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;green&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;orange&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
 
<span class="token variable">$array</span> <span class="token operator">=</span> <span class="token function">array_combine</span><span class="token punctuation">(</span><span class="token variable">$keys</span><span class="token punctuation">,</span> <span class="token variable">$values</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">print_r</span><span class="token punctuation">(</span><span class="token variable">$array</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
 
<span class="token comment">// Array</span>
<span class="token comment">// (</span>
<span class="token comment">//     [sky] =&gt; blue</span>
<span class="token comment">//     [grass] =&gt; green</span>
<span class="token comment">//     [orange] =&gt; orange</span>
<span class="token comment">// )</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4F60\u5E94\u8BE5\u77E5\u9053\uFF0Carray_values() \u51FD\u6570\u8FD4\u56DE\u539F\u6570\u7EC4\u7684\u503C\u7EC4\u6210\u7684\u6570\u7EC4\uFF0Carray_keys() \u8FD4\u56DE\u539F\u6570\u7EC4\u7684\u952E\u7EC4\u6210\u7684\u6570\u7EC4\uFF0Carray_filp() \u4EA4\u6362\u539F\u6570\u7EC4\u7684\u952E\u548C\u503C\uFF1A</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token function">print_r</span><span class="token punctuation">(</span><span class="token function">array_keys</span><span class="token punctuation">(</span><span class="token variable">$array</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [&#39;sky&#39;, &#39;grass&#39;, &#39;orange&#39;]</span>
<span class="token function">print_r</span><span class="token punctuation">(</span><span class="token function">array_values</span><span class="token punctuation">(</span><span class="token variable">$array</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [&#39;blue&#39;, &#39;green&#39;, &#39;orange&#39;]</span>
<span class="token function">print_r</span><span class="token punctuation">(</span><span class="token function">array_flip</span><span class="token punctuation">(</span><span class="token variable">$array</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
 
<span class="token comment">// Array</span>
<span class="token comment">// (</span>
<span class="token comment">//     [blue] =&gt; sky</span>
<span class="token comment">//     [green] =&gt; grass</span>
<span class="token comment">//     [orange] =&gt; orange</span>
<span class="token comment">// )</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u5199\u66F4\u7B80\u6D01\u7684\u4EE3\u7801" tabindex="-1"><a class="header-anchor" href="#\u5199\u66F4\u7B80\u6D01\u7684\u4EE3\u7801" aria-hidden="true">#</a> \u5199\u66F4\u7B80\u6D01\u7684\u4EE3\u7801</h2><p>\u51FD\u6570 list()\uFF0C\u5B9E\u9645\u4E0A\u662F\u4E00\u4E2A\u8BED\u8A00\u7ED3\u6784\uFF0C\u5176\u76EE\u7684\u5C31\u662F\u66F4\u7B80\u6D01\u5730\u8D4B\u503C\u53D8\u91CF\u3002\u4E0B\u9762\u662F\u4E00\u4E2A\u57FA\u672C\u7684\u4F8B\u5B50\uFF1A</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token comment">// define array</span>
<span class="token variable">$array</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;b&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;c&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
 
<span class="token comment">// without list()</span>
<span class="token variable">$a</span> <span class="token operator">=</span> <span class="token variable">$array</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token variable">$b</span> <span class="token operator">=</span> <span class="token variable">$array</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token variable">$c</span> <span class="token operator">=</span> <span class="token variable">$array</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
 
<span class="token comment">// with list()</span>
<span class="token keyword">list</span><span class="token punctuation">(</span><span class="token variable">$a</span><span class="token punctuation">,</span> <span class="token variable">$b</span><span class="token punctuation">,</span> <span class="token variable">$c</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token variable">$array</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u4E2A\u8BED\u8A00\u7ED3\u6784\u4E0E preg_list() \u548C explode() \u914D\u5408\u4F7F\u7528\u66F4\u597D\uFF0C\u540C\u65F6\uFF0C\u4F60\u53EF\u4EE5\u7701\u7565\u67D0\u4E9B\u53C2\u6570\uFF08\u5982\u679C\u4F60\u4E0D\u60F3\u591A\u5B9A\u4E49\u4E00\u4E2A\u53C2\u6570\u7684\u8BDD\uFF09\uFF1A</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token variable">$string</span> <span class="token operator">=</span> <span class="token string single-quoted-string">&#39;hello|wild|world&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">list</span><span class="token punctuation">(</span><span class="token variable">$hello</span><span class="token punctuation">,</span> <span class="token punctuation">,</span> <span class="token variable">$world</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token function">explode</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;|&#39;</span><span class="token punctuation">,</span> <span class="token variable">$string</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">echo</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;<span class="token interpolation"><span class="token variable">$hello</span></span>, <span class="token interpolation"><span class="token variable">$world</span></span>&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// hello, world</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>list() \u914D\u5408 foreach \u4F7F\u7528\u4E5F\u4F1A\u53D6\u5F97\u66F4\u597D\u7684\u6548\u679C\uFF1A</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token variable">$arrays</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
 
<span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token variable">$arrays</span> <span class="token keyword">as</span> <span class="token keyword">list</span><span class="token punctuation">(</span><span class="token variable">$a</span><span class="token punctuation">,</span> <span class="token variable">$b</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token variable">$c</span> <span class="token operator">=</span> <span class="token variable">$a</span> <span class="token operator">+</span> <span class="token variable">$b</span><span class="token punctuation">;</span>
    <span class="token keyword">echo</span><span class="token punctuation">(</span><span class="token variable">$c</span> <span class="token operator">.</span> <span class="token string single-quoted-string">&#39;, &#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 3, 7, 11, </span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>extract() \u51FD\u6570\u53EF\u4EE5\u628A\u4E00\u4E2A\u5173\u8054\u6570\u7EC4\u8D4B\u503C\u7ED9\u53D8\u91CF\u3002\u5BF9\u4E8E\u4E00\u4E2A\u6570\u7EC4\u7684\u6BCF\u4E2A\u5143\u7D20\uFF0C\u521B\u5EFA\u4E00\u4E2A\u53D8\u91CF\uFF0C\u5143\u7D20\u7684\u952E\u505A\u53D8\u91CF\u540D\uFF0C\u5143\u7D20\u7684\u503C\u505A\u53D8\u91CF\u503C\uFF1A</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token variable">$array</span> <span class="token operator">=</span> <span class="token punctuation">[</span>
    <span class="token string single-quoted-string">&#39;clothes&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;t-shirt&#39;</span><span class="token punctuation">,</span>
    <span class="token string single-quoted-string">&#39;size&#39;</span>    <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;medium&#39;</span><span class="token punctuation">,</span>
    <span class="token string single-quoted-string">&#39;color&#39;</span>   <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;blue&#39;</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>
 
<span class="token function">extract</span><span class="token punctuation">(</span><span class="token variable">$array</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
 
<span class="token keyword">echo</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;<span class="token interpolation"><span class="token variable">$clothes</span></span> <span class="token interpolation"><span class="token variable">$size</span></span> <span class="token interpolation"><span class="token variable">$color</span></span>&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// t-shirt medium blue</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0E extract() \u4F5C\u7528\u76F8\u53CD\u7684\u51FD\u6570\u662F compact() \u51FD\u6570\uFF0C\u5B83\u4F7F\u7528\u53D8\u91CF\u6765\u521B\u5EFA\u4E00\u4E2A\u5173\u8054\u6570\u7EC4\uFF1A</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token variable">$clothes</span> <span class="token operator">=</span> <span class="token string single-quoted-string">&#39;t-shirt&#39;</span><span class="token punctuation">;</span>
<span class="token variable">$size</span> <span class="token operator">=</span> <span class="token string single-quoted-string">&#39;medium&#39;</span><span class="token punctuation">;</span>
<span class="token variable">$color</span> <span class="token operator">=</span> <span class="token string single-quoted-string">&#39;blue&#39;</span><span class="token punctuation">;</span>
 
<span class="token variable">$array</span> <span class="token operator">=</span> <span class="token function">compact</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;clothes&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;size&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;color&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">print_r</span><span class="token punctuation">(</span><span class="token variable">$array</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
 
<span class="token comment">// Array</span>
<span class="token comment">// (</span>
<span class="token comment">//     [clothes] =&gt; t-shirt</span>
<span class="token comment">//     [size] =&gt; medium</span>
<span class="token comment">//     [color] =&gt; blue</span>
<span class="token comment">// )</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u8FC7\u6EE4\u51FD\u6570" tabindex="-1"><a class="header-anchor" href="#\u8FC7\u6EE4\u51FD\u6570" aria-hidden="true">#</a> \u8FC7\u6EE4\u51FD\u6570</h2><p>\u6709\u4E00\u4E2A\u6781\u597D\u7684\u6570\u7EC4\u8FC7\u6EE4\u51FD\u6570\uFF0C\u53EB\u505A array_filter()\u3002\u7B2C\u4E00\u4E2A\u53C2\u6570\u662F\u5F85\u8FC7\u6EE4\u7684\u6570\u7EC4\uFF0C\u7B2C\u4E8C\u4E2A\u53C2\u6570\u662F\u4E00\u4E2A\u533F\u540D\u51FD\u6570\uFF0C\u5982\u679C\u4F60\u60F3\u8981\u8BA9\u5143\u7D20\u7559\u5728\u6570\u7EC4\u4E2D\uFF0C\u5C31\u8BA9\u8BE5\u56DE\u8C03\u51FD\u6570\u8FD4\u56DEtrue\uFF0C\u5426\u5219\u8FD4\u56DEdalse:</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token variable">$numbers</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">20</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">99</span><span class="token punctuation">,</span> <span class="token number">55</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
 
<span class="token variable">$positive</span> <span class="token operator">=</span> <span class="token function">array_filter</span><span class="token punctuation">(</span><span class="token variable">$numbers</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token variable">$number</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token variable">$number</span> <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
 
<span class="token function">print_r</span><span class="token punctuation">(</span><span class="token variable">$positive</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [0 =&gt; 20, 2 =&gt; 50, 4 =&gt; 55]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>array_filter \u4E0D\u4EC5\u53EF\u4EE5\u901A\u8FC7\u6570\u7EC4\u503C\u6765\u8FC7\u6EE4\uFF0C\u4E5F\u53EF\u4EE5\u4F7F\u7528 ARRAY_FILTER_USE_KEY \u548C ARRAY_FILTER_USE_BOTH \u4F5C\u4E3A\u7B2C\u4E09\u4E2A\u53C2\u6570\u6765\u51B3\u5B9A\u4F20\u9012\u952E\u6216\u952E\u503C\u5230\u56DE\u8C03\u51FD\u6570\u4E2D\u3002</p><p>\u4F60\u4E5F\u53EF\u4EE5\u8C03\u7528 array_filter() \u4E0D\u4F20\u56DE\u8C03\u51FD\u6570\uFF0C\u8FD9\u6837\u4F1A\u8FC7\u6EE4\u6240\u6709\u7684\u7A7A\u503C\uFF1A</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token variable">$numbers</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
 
<span class="token variable">$not_empty</span> <span class="token operator">=</span> <span class="token function">array_filter</span><span class="token punctuation">(</span><span class="token variable">$numbers</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
 
<span class="token function">print_r</span><span class="token punctuation">(</span><span class="token variable">$not_empty</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [0 =&gt; -1, 2 =&gt; 1]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4F60\u53EF\u4EE5\u4F7F\u7528 array_unique() \u51FD\u6570\u4ECE\u6570\u7EC4\u4E2D\u83B7\u53D6\u552F\u4E00\u503C\uFF0C\u8981\u6CE8\u610F\u8FD9\u4E2A\u51FD\u6570\u4F1A\u4FDD\u7559\u4E00\u4E2A\u552F\u4E00\u5143\u7D20\u7684\u952E\uFF1A</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token variable">$array</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token variable">$uniques</span> <span class="token operator">=</span> <span class="token function">array_unique</span><span class="token punctuation">(</span><span class="token variable">$array</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
 
<span class="token function">print_r</span><span class="token punctuation">(</span><span class="token variable">$uniques</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
 
<span class="token comment">// Array</span>
<span class="token comment">// (</span>
<span class="token comment">//     [0] =&gt; 1</span>
<span class="token comment">//     [4] =&gt; 2</span>
<span class="token comment">//     [7] =&gt; 3</span>
<span class="token comment">//     [8] =&gt; 4</span>
<span class="token comment">//     [9] =&gt; 5</span>
<span class="token comment">// )</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4F7F\u7528 array_column()\uFF0C\u53EF\u4EE5\u4ECE\u591A\u7EF4\u6570\u7EC4\u6570\u7EC4\u4E2D\u83B7\u5F97\u4E00\u5217\u503C\u7EC4\u6210\u7684\u6570\u7EC4\uFF0C\u7C7B\u4F3C\u4E8E\u4ECESQL\u6570\u636E\u5E93\u4E2D\u83B7\u53D6\u503C\u4E00\u6837\uFF1A</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token variable">$array</span> <span class="token operator">=</span> <span class="token punctuation">[</span>
    <span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;id&#39;</span> <span class="token operator">=&gt;</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;title&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;tree&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;id&#39;</span> <span class="token operator">=&gt;</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;title&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;sun&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;id&#39;</span> <span class="token operator">=&gt;</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;title&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;cloud&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>
 
<span class="token variable">$ids</span> <span class="token operator">=</span> <span class="token function">array_column</span><span class="token punctuation">(</span><span class="token variable">$array</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;id&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
 
<span class="token function">print_r</span><span class="token punctuation">(</span><span class="token variable">$ids</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [1, 2, 3]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4ECEPHP7\u5F00\u59CB\uFF0Carray_column() \u53D8\u5F97\u66F4\u52A0\u5F3A\u5927\u4E86\uFF0C\u56E0\u4E3A\u5B83\u73B0\u5728\u652F\u6301\u5BF9\u8C61\u7EC4\u6210\u7684\u6570\u7EC4\u4E86\uFF0C\u6240\u4EE5\u7528\u5B83\u6765\u5904\u7406\u6A21\u578B\u7684\u6570\u7EC4\u53D8\u5F97\u66F4\u5BB9\u6613\uFF1A</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token variable">$cinemas</span> <span class="token operator">=</span> <span class="token class-name static-context">Cinema</span><span class="token operator">::</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token variable">$cinema_ids</span> <span class="token operator">=</span> <span class="token function">array_column</span><span class="token punctuation">(</span><span class="token variable">$cinemas</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;id&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// php7 forever!</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u904D\u5386\u6570\u7EC4" tabindex="-1"><a class="header-anchor" href="#\u904D\u5386\u6570\u7EC4" aria-hidden="true">#</a> \u904D\u5386\u6570\u7EC4</h2><p>\u4F7F\u7528 array_map() \u53EF\u4EE5\u5C06\u4E00\u4E2A\u56DE\u8C03\u51FD\u6570\u5E94\u7528\u5230\u6570\u7EC4\u7684\u6BCF\u4E2A\u5143\u7D20\u4E0A\u9762\u3002\u4F60\u53EF\u4EE5\u4F20\u9012\u4E00\u4E2A\u51FD\u6570\u540D\u6216\u4E00\u4E2A\u533F\u540D\u51FD\u6570\uFF0C\u57FA\u4E8E\u7ED9\u5B9A\u7684\u6570\u7EC4\u83B7\u53D6\u65B0\u7684\u6570\u7EC4\uFF1A</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token variable">$cities</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;Berlin&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;KYIV&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;Amsterdam&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;Riga&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token variable">$aliases</span> <span class="token operator">=</span> <span class="token function">array_map</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;strtolower&#39;</span><span class="token punctuation">,</span> <span class="token variable">$cities</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
 
<span class="token function">print_r</span><span class="token punctuation">(</span><span class="token variable">$aliases</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [&#39;berlin&#39;, &#39;kyiv, &#39;amsterdam&#39;, &#39;riga&#39;]</span>
 
<span class="token variable">$numbers</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token variable">$squares</span> <span class="token operator">=</span> <span class="token function">array_map</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token variable">$number</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token variable">$number</span> <span class="token operator">**</span> <span class="token number">2</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token variable">$numbers</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
 
<span class="token function">print_r</span><span class="token punctuation">(</span><span class="token variable">$squares</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// [1, 4, 9, 16, 25]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6709\u4E00\u4E2A\u4F20\u8A00\u8BF4\u6CA1\u6709\u529E\u6CD5\u540C\u65F6\u4F20\u9012\u952E\u548C\u503C\u7ED9\u56DE\u8C03\u51FD\u6570\uFF0C\u4F46\u662F\u53EF\u4EE5\u8FD9\u6837\u505A\u5230\uFF1A</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token variable">$model</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;id&#39;</span> <span class="token operator">=&gt;</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;name&#39;</span><span class="token operator">=&gt;</span><span class="token string single-quoted-string">&#39;James&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
 
<span class="token variable">$callback</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token variable">$key</span><span class="token punctuation">,</span> <span class="token variable">$value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token string double-quoted-string">&quot;<span class="token interpolation"><span class="token variable">$key</span></span> is <span class="token interpolation"><span class="token variable">$value</span></span>&quot;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
 
<span class="token variable">$res</span> <span class="token operator">=</span> <span class="token function">array_map</span><span class="token punctuation">(</span><span class="token variable">$callback</span><span class="token punctuation">,</span> <span class="token function">array_keys</span><span class="token punctuation">(</span><span class="token variable">$model</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token variable">$model</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">print_r</span><span class="token punctuation">(</span><span class="token variable">$res</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
 
<span class="token comment">// Array</span>
<span class="token comment">// (</span>
<span class="token comment">//     [0] =&gt; id is 7</span>
<span class="token comment">//     [1] =&gt; name is James</span>
<span class="token comment">// )</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4F46\u662F\u8FD9\u6837\u770B\u8D77\u592A\u4E11\u964B\u4E86\uFF0C\u66F4\u597D\u7684\u65B9\u5F0F\u662F\u4F7F\u7528 array_walk() \u66FF\u4EE3\u3002\u8FD9\u4E2A\u51FD\u6570\u7C7B\u4F3C array_map()\uFF0C\u4F46\u5DE5\u4F5C\u539F\u7406\u4E0D\u540C\u3002\u9996\u5148\uFF0C\u6570\u7EC4\u662F\u901A\u8FC7\u5F15\u7528\u4F20\u9012\u7684\uFF0C\u6240\u4EE5 array_walk() \u4E0D\u4F1A\u521B\u5EFA\u65B0\u6570\u7EC4\uFF0C\u800C\u662F\u4FEE\u6539\u539F\u6570\u7EC4\u3002</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token variable">$fruits</span> <span class="token operator">=</span> <span class="token punctuation">[</span>
    <span class="token string single-quoted-string">&#39;banana&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;yellow&#39;</span><span class="token punctuation">,</span>
    <span class="token string single-quoted-string">&#39;apple&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;green&#39;</span><span class="token punctuation">,</span>
    <span class="token string single-quoted-string">&#39;orange&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;orange&#39;</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>
 
<span class="token function">array_walk</span><span class="token punctuation">(</span><span class="token variable">$fruits</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token variable">$value</span><span class="token punctuation">,</span> <span class="token variable">$key</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token variable">$value</span> <span class="token operator">=</span> <span class="token string double-quoted-string">&quot;<span class="token interpolation"><span class="token variable">$key</span></span> is <span class="token interpolation"><span class="token variable">$value</span></span>&quot;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
 
<span class="token function">print_r</span><span class="token punctuation">(</span><span class="token variable">$fruits</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
 
<span class="token comment">// Array</span>
<span class="token comment">// (</span>
<span class="token comment">//     [banana] =&gt; banana is yellow</span>
<span class="token comment">//     [apple] =&gt; apple is green</span>
<span class="token comment">//     [orange] =&gt; orange is orange</span>
<span class="token comment">// )</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u5408\u5E76\u6570\u7EC4" tabindex="-1"><a class="header-anchor" href="#\u5408\u5E76\u6570\u7EC4" aria-hidden="true">#</a> \u5408\u5E76\u6570\u7EC4</h2><p>\u5408\u5E76\u591A\u4E2A\u6570\u7EC4\u7684\u6700\u597D\u65B9\u5F0F\u662F\u4F7F\u7528 array_merge() \u51FD\u6570\u3002\u6570\u7EC4\u5143\u7D20\u4F1A\u88AB\u5408\u5E76\u5230\u4E00\u8D77\uFF0C\u5BF9\u4E8E\u5177\u6709\u76F8\u540C\u952E\u7684\u503C\uFF0C\u524D\u9762\u7684\u5143\u7D20\u4F1A\u88AB\u540E\u9762\u503C\u91CD\u5199\uFF1A</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token variable">$array1</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;a&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;b&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;b&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;c&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;c&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token variable">$array2</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;a&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;A&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;b&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;B&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;D&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;D&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
 
<span class="token variable">$merge</span> <span class="token operator">=</span> <span class="token function">array_merge</span><span class="token punctuation">(</span><span class="token variable">$array1</span><span class="token punctuation">,</span> <span class="token variable">$array2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">print_r</span><span class="token punctuation">(</span><span class="token variable">$merge</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Array</span>
<span class="token comment">// (</span>
<span class="token comment">//     [a] =&gt; A</span>
<span class="token comment">//     [b] =&gt; B</span>
<span class="token comment">//     [c] =&gt; c</span>
<span class="token comment">//     [D] =&gt; D</span>
<span class="token comment">// )</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5982\u679C\u60F3\u4ECE\u6570\u7EC4\u4E2D\u79FB\u9664\u53E6\u4E00\u4E2A\u6570\u7EC4\u7684\u503C\uFF0C\u53EF\u4F7F\u7528 array_diff() \u51FD\u6570\u3002\u5982\u679C\u60F3\u4ECE\u591A\u4E2A\u6570\u7EC4\u4E2D\u83B7\u53D6\u5B83\u4EEC\u90FD\u6709\u7684\u503C\uFF0C\u53EF\u4F7F\u7528 array_intersect()\u3002\u4E0B\u9762\u7684\u4F8B\u5B50\uFF1A</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token variable">$array1</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token variable">$array2</span> <span class="token operator">=</span>       <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
 
<span class="token variable">$diff</span> <span class="token operator">=</span> <span class="token function">array_diff</span><span class="token punctuation">(</span><span class="token variable">$array1</span><span class="token punctuation">,</span> <span class="token variable">$array2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">print_r</span><span class="token punctuation">(</span><span class="token variable">$diff</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [0 =&gt; 1, 1 =&gt; 2]</span>
 
<span class="token variable">$intersect</span> <span class="token operator">=</span> <span class="token function">array_intersect</span><span class="token punctuation">(</span><span class="token variable">$array1</span><span class="token punctuation">,</span> <span class="token variable">$array2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">print_r</span><span class="token punctuation">(</span><span class="token variable">$intersect</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// [2 =&gt; 3, 3 =&gt; 4]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u4F7F\u7528\u6570\u7EC4\u505A\u6570\u5B66\u8BA1\u7B97" tabindex="-1"><a class="header-anchor" href="#\u4F7F\u7528\u6570\u7EC4\u505A\u6570\u5B66\u8BA1\u7B97" aria-hidden="true">#</a> \u4F7F\u7528\u6570\u7EC4\u505A\u6570\u5B66\u8BA1\u7B97</h2><p>\u4F7F\u7528 array_sum() \u83B7\u53D6\u6570\u7EC4\u503C\u7684\u548C\uFF0Carray_product() \u83B7\u53D6\u6570\u7EC4\u503C\u7684\u4E58\u79EF\uFF0C\u6216\u4F7F\u7528 array_reduce() \u521B\u5EFA\u4F60\u81EA\u5DF1\u7684\u516C\u5F0F\uFF1A</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token variable">$numbers</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
 
<span class="token keyword">echo</span><span class="token punctuation">(</span><span class="token function">array_sum</span><span class="token punctuation">(</span><span class="token variable">$numbers</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 15</span>
<span class="token keyword">echo</span><span class="token punctuation">(</span><span class="token function">array_product</span><span class="token punctuation">(</span><span class="token variable">$numbers</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 120</span>
 
<span class="token keyword">echo</span><span class="token punctuation">(</span><span class="token function">array_reduce</span><span class="token punctuation">(</span><span class="token variable">$numbers</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token variable">$carry</span><span class="token punctuation">,</span> <span class="token variable">$item</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token variable">$carry</span> <span class="token operator">?</span> <span class="token variable">$carry</span> <span class="token operator">/</span> <span class="token variable">$item</span> <span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 0.0083 = 1/2/3/4/5</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4F7F\u7528 array_count_values() \u8BA1\u7B97\u6570\u7EC4\u4E2D\u503C\u51FA\u73B0\u7684\u6B21\u6570\uFF0C\u6BCF\u4E2A\u552F\u4E00\u7684\u952E\u4F5C\u4E3A\u6570\u7EC4\u7684\u952E\uFF0C\u952E\u503C\u51FA\u73B0\u7684\u6B21\u6570\u4F5C\u4E3A\u503C\uFF1A</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token variable">$things</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;apple&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;apple&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;banana&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;tree&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;tree&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;tree&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token variable">$values</span> <span class="token operator">=</span> <span class="token function">array_count_values</span><span class="token punctuation">(</span><span class="token variable">$things</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
 
<span class="token function">print_r</span><span class="token punctuation">(</span><span class="token variable">$values</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
 
<span class="token comment">// Array</span>
<span class="token comment">// (</span>
<span class="token comment">//     [apple] =&gt; 2</span>
<span class="token comment">//     [banana] =&gt; 1</span>
<span class="token comment">//     [tree] =&gt; 3</span>
<span class="token comment">// )</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u751F\u6210\u6570\u7EC4" tabindex="-1"><a class="header-anchor" href="#\u751F\u6210\u6570\u7EC4" aria-hidden="true">#</a> \u751F\u6210\u6570\u7EC4</h2><p>\u53EF\u4EE5\u4F7F\u7528 array_fill() \u4ECE\u7ED9\u5B9A\u7684\u5927\u5C0F\u548C\u503C\u6765\u751F\u6210\u6570\u7EC4\uFF1A</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token variable">$bind</span> <span class="token operator">=</span> <span class="token function">array_fill</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;?&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">print_r</span><span class="token punctuation">(</span><span class="token variable">$bind</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [&#39;?&#39;, &#39;?&#39;, &#39;?&#39;, &#39;?&#39;, &#39;?&#39;]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>\u53EF\u4EE5\u4F7F\u7528 range() \u751F\u6210\u987A\u5E8F\u7684\u503C\uFF1A</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token variable">$letters</span> <span class="token operator">=</span> <span class="token function">range</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;z&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">print_r</span><span class="token punctuation">(</span><span class="token variable">$letters</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [&#39;a&#39;, &#39;b&#39;, ..., &#39;z&#39;]</span>
 
<span class="token variable">$hours</span> <span class="token operator">=</span> <span class="token function">range</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">23</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">print_r</span><span class="token punctuation">(</span><span class="token variable">$hours</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [0, 1, 2, ..., 23]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u53EF\u4EE5\u4F7F\u7528 array_slice() \u83B7\u53D6\u6570\u7EC4\u7684\u4E00\u90E8\u5206\uFF1A</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token variable">$numbers</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token variable">$top</span> <span class="token operator">=</span> <span class="token function">array_slice</span><span class="token punctuation">(</span><span class="token variable">$numbers</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">print_r</span><span class="token punctuation">(</span><span class="token variable">$top</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [1, 2, 3]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u6392\u5E8F\u6570\u7EC4" tabindex="-1"><a class="header-anchor" href="#\u6392\u5E8F\u6570\u7EC4" aria-hidden="true">#</a> \u6392\u5E8F\u6570\u7EC4</h2><p>\u6700\u597D\u8981\u8BB0\u4F4F\u7684\u662F\uFF0C\u6240\u6709\u7684\u6570\u7EC4\u6392\u5E8F\u51FD\u6570\u4F7F\u7528\u7684\u90FD\u662F\u6570\u7EC4\u7684\u5F15\u7528\uFF0C\u6210\u529F\u8FD4\u56DEtrue\uFF0C\u5931\u8D25\u8FD4\u56DEfalse\u3002\u9996\u5148\u662F\u4E00\u4E2A\u57FA\u672C\u7684\u6392\u5E8F\u51FD\u6570 sort()\uFF0C\u5B83\u6309\u7167\u503C\u7684\u5347\u5E8F\u987A\u5E8F\u6392\u5E8F\u6570\u7EC4\u5143\u7D20\uFF0C\u4E0D\u4F1A\u4FDD\u7559\u952E\u503C\u3002\u5176\u4ED6\u7684\u6392\u5E8F\u51FD\u6570\u90FD\u662F\u5728 sort() \u51FD\u6570\u540D\u524D\u52A0\u4E0A\u4E0D\u540C\u7684\u5B57\u6BCD\u524D\u7F00\u6765\u8868\u793A\uFF1A</p><ul><li>a\uFF0C\u6392\u5E8F\u5E76\u4FDD\u7559\u952E</li><li>k\uFF0C\u6309\u7167\u952E\u6765\u6392\u5E8F</li><li>r\uFF0C\u6309\u7167\u76F8\u53CD/\u964D\u5E8F\u7684\u987A\u5E8F\u6392\u5E8F</li><li>u\uFF0C\u6309\u7167\u7528\u6237\u5B9A\u4E49\u7684\u51FD\u6570\u6765\u6392\u5E8F \u4E0B\u8868\u662F\u8FD9\u4E9B\u5B57\u6BCD\u7684\u7EC4\u5408\uFF1A</li></ul><p>| |a| k |r |u | | ------------ | ------------ | ------------ | ------------ | | a| asort| | arsort | uasort | | k| | ksort | krsort | | | r| arsort | krsort | rsort | | | u| uasort | | | usort |</p><p>\u5F53\u4F60\u5F00\u59CB\u7EC4\u5408\u4F7F\u7528\u6570\u7EC4\u51FD\u6570\u65F6\uFF0C\u771F\u6B63\u7684\u9B54\u6CD5\u624D\u5F00\u59CB\u5C55\u73B0\u3002\u4E0B\u9762\u662F\u4E00\u4E2A\u4F8B\u5B50\uFF1A\u7EC4\u5408 array_slice() \u548C array_map() \u51FD\u6570\uFF0C\u4EC5\u4EC5\u4F7F\u7528\u4E24\u884C\u4EE3\u7801\u5C31\u5B8C\u6210\u4E86trim\u548C\u7A7A\u503C\u7684\u79FB\u9664\uFF1A</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token variable">$values</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;say  &#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;  bye&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39; &#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39; to&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39; spaces &#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;   &#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
 
<span class="token variable">$words</span> <span class="token operator">=</span> <span class="token function">array_filter</span><span class="token punctuation">(</span><span class="token function">array_map</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;trim&#39;</span><span class="token punctuation">,</span> <span class="token variable">$values</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">print_r</span><span class="token punctuation">(</span><span class="token variable">$words</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [&#39;say&#39;, &#39;bye&#39;, &#39;to&#39;, &#39;spaces&#39;]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7EC4\u5408\u4F7F\u7528 array_combine() \u548C array_column() \u51FD\u6570\uFF0C\u53EF\u4EE5\u4ECE\u6A21\u578B\u6570\u7EC4\u4E2D\u83B7\u53D6id\u5230title\u7684\u6620\u5C04\uFF1A</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token variable">$models</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token variable">$model1</span><span class="token punctuation">,</span> <span class="token variable">$model2</span><span class="token punctuation">,</span> <span class="token variable">$model3</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
 
<span class="token variable">$id_to_title</span> <span class="token operator">=</span> <span class="token function">array_combine</span><span class="token punctuation">(</span>
    <span class="token function">array_column</span><span class="token punctuation">(</span><span class="token variable">$models</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;id&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">array_column</span><span class="token punctuation">(</span><span class="token variable">$models</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;title&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7EC4\u5408\u4F7F\u7528 array_count_value()\uFF0Carsort() \u548C array_slice() \u51FD\u6570\uFF0C\u83B7\u53D6\u524D\u4E09\u4E2A\u51FA\u73B0\u6B21\u6570\u6700\u591A\u7684\u503C\uFF1A</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token variable">$letters</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;b&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;b&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;c&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;d&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;d&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;d&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;d&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;d&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
 
<span class="token variable">$values</span> <span class="token operator">=</span> <span class="token function">array_count_values</span><span class="token punctuation">(</span><span class="token variable">$letters</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// get key to count array</span>
<span class="token function">arsort</span><span class="token punctuation">(</span><span class="token variable">$values</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// sort descending preserving key</span>
<span class="token variable">$top</span> <span class="token operator">=</span> <span class="token function">array_slice</span><span class="token punctuation">(</span><span class="token variable">$values</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// get top 3</span>
 
<span class="token function">print_r</span><span class="token punctuation">(</span><span class="token variable">$top</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Array</span>
<span class="token comment">// (</span>
<span class="token comment">//     [d] =&gt; 5</span>
<span class="token comment">//     [a] =&gt; 4</span>
<span class="token comment">//     [b] =&gt; 2</span>
<span class="token comment">// )</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4F7F\u7528 array_sum() \u548C array_map() \u5F88\u5BB9\u6613\u8BA1\u7B97\u67D0\u884C\u7684\u548C\uFF1A</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token variable">$order</span> <span class="token operator">=</span> <span class="token punctuation">[</span>
    <span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;product_id&#39;</span> <span class="token operator">=&gt;</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;price&#39;</span> <span class="token operator">=&gt;</span> <span class="token number">99</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;count&#39;</span> <span class="token operator">=&gt;</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;product_id&#39;</span> <span class="token operator">=&gt;</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;price&#39;</span> <span class="token operator">=&gt;</span> <span class="token number">50</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;count&#39;</span> <span class="token operator">=&gt;</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;product_id&#39;</span> <span class="token operator">=&gt;</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;price&#39;</span> <span class="token operator">=&gt;</span> <span class="token number">17</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;count&#39;</span> <span class="token operator">=&gt;</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>
 
<span class="token variable">$sum</span> <span class="token operator">=</span> <span class="token function">array_sum</span><span class="token punctuation">(</span><span class="token function">array_map</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token variable">$product_row</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token variable">$product_row</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;price&#39;</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token variable">$product_row</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;count&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token variable">$order</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
 
<span class="token function">print_r</span><span class="token punctuation">(</span><span class="token variable">$sum</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 250</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u603B\u7ED3" tabindex="-1"><a class="header-anchor" href="#\u603B\u7ED3" aria-hidden="true">#</a> \u603B\u7ED3</h2><p>\u5982\u4E0A\u6240\u8FF0\uFF0C\u4E3B\u8981\u7684\u6570\u7EC4\u51FD\u6570\u53EF\u4F7F\u4EE3\u7801\u66F4\u5177\u53EF\u8BFB\u6027\uFF0C\u66F4\u7B80\u6D01\u3002\u5F53\u7136\uFF0CPHP\u8FD8\u6709\u5F88\u591A\u5176\u4ED6\u7684\u6570\u7EC4\u51FD\u6570\uFF0C\u5C31\u7B97\u662F\u4E0A\u8FF0\u7684\u6570\u7EC4\u51FD\u6570\u7ED9\u5B9A\u4E0D\u540C\u7684\u53C2\u6570\u7684\u8BDD\u4E5F\u4F1A\u6709\u4E0D\u540C\u7684\u7528\u6CD5\uFF0C\u4F46\u662F\u6211\u8BA4\u4E3A\u8FD9\u7BC7\u6559\u7A0B\u4E2D\u7684\u5185\u5BB9\u5DF2\u7ECF\u8986\u76D6\u4E86\u6BCF\u4E2APHP\u5F00\u53D1\u8005\u5E94\u8BE5\u8981\u77E5\u9053\u7684\u4E1C\u897F\u3002</p>`,67),r={href:"https://code.tutsplus.com/tutorials/working-with-php-arrays-in-the-right-way--cms-28606",target:"_blank",rel:"noopener noreferrer"};function k(d,v){const a=l("ExternalLinkIcon");return t(),e("div",null,[u,n("p",null,[s("\u6CE8\uFF1A\u8FD9\u7BC7\u6559\u7A0B\u662F\u6211\u7FFB\u8BD1\u81EA\u4E00\u7BC7\u82F1\u6587\u6587\u7AE0\uFF0C\u539F\u6587\u94FE\u63A5\u8D34\u5728\u4E0B\u9762\u4E86\uFF1A "),n("a",r,[s("https://code.tutsplus.com/tutorials/working-with-php-arrays-in-the-right-way--cms-28606"),o(a)])])])}const g=p(i,[["render",k],["__file","2018-12-21-working-with-php-arrays-in-the-right-way.html.vue"]]);export{g as default};
