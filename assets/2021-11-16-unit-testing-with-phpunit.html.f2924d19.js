import{_ as e}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as p,c as o,a as n,b as s,d as t,e as c,r as l}from"./app.6f7e30ef.js";const i="/blog/imgs/73eccf9c676a943c001c4eb1134622dd.jpg",u={},r=c(`<h2 id="\u5B89\u88C5phpunit" tabindex="-1"><a class="header-anchor" href="#\u5B89\u88C5phpunit" aria-hidden="true">#</a> \u5B89\u88C5PHPUnit</h2><p>\u4F7F\u7528 <code>Composer</code> \u5B89\u88C5 <code>PHPUnit</code></p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment">#\u67E5\u770Bcomposer\u7684\u5168\u5C40bin\u76EE\u5F55 \u5C06\u5176\u52A0\u5165\u7CFB\u7EDF path \u8DEF\u5F84 \u65B9\u4FBF\u540E\u7EED\u76F4\u63A5\u8FD0\u884C\u5B89\u88C5\u7684\u547D\u4EE4</span>
<span class="token function">composer</span> global config bin-dir <span class="token parameter variable">--absolute</span>

<span class="token comment">#\u5168\u5C40\u5B89\u88C5 phpunit</span>
<span class="token comment"># php7.1 \u9ED8\u8BA4\u5B89\u88C5\u7684\u662F phpunit7.5 \u7248\u672C</span>
<span class="token function">composer</span> global require <span class="token parameter variable">--dev</span> phpunit/phpunit

<span class="token comment">#\u67E5\u770B\u7248\u672C</span>
phpunit <span class="token parameter variable">--version</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u7F16\u5199\u6D4B\u8BD5\u7528\u4F8B" tabindex="-1"><a class="header-anchor" href="#\u7F16\u5199\u6D4B\u8BD5\u7528\u4F8B" aria-hidden="true">#</a> \u7F16\u5199\u6D4B\u8BD5\u7528\u4F8B</h2><p>\u5728 demo \u9879\u76EE\u91CC\u9762\uFF0C\u6709\u4E00\u4E2A\u6587\u4EF6 <code>app/service/Clue/PayRecordService.php</code></p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token keyword">namespace</span> <span class="token package">Service<span class="token punctuation">\\</span>Clue</span><span class="token punctuation">;</span>

<span class="token keyword">class</span> <span class="token class-name-definition class-name">PayRecordService</span> <span class="token keyword">extends</span> <span class="token class-name">BaseService</span>  
<span class="token punctuation">{</span>
    <span class="token doc-comment comment">/**  
     * \u683C\u5F0F\u5316\u662F\u5426\u663E\u793A\u5220\u9664\u6309\u94AE * @param <span class="token parameter">$payRecord</span>  
     * <span class="token keyword">@return</span> <span class="token class-name"><span class="token keyword">bool</span></span>  
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">formatShowDeleteBtn</span><span class="token punctuation">(</span><span class="token variable">$payRecord</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword return-type">bool</span>  
    <span class="token punctuation">{</span>  
        <span class="token variable">$hide</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token variable">$payRecord</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;billed_money&#39;</span><span class="token punctuation">]</span> <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token comment">// \u5DF2\u5165\u8D26\u7684  </span>
            <span class="token operator">||</span> <span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">isBankPayRecord</span><span class="token punctuation">(</span><span class="token variable">$payRecord</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;pay_type&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">isArrivedPayRecord</span><span class="token punctuation">(</span><span class="token variable">$payRecord</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;money_arrived_status&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u5DF2\u8BA4\u9886\u7684\u94F6\u884C  </span>
     <span class="token keyword">return</span> <span class="token operator">!</span><span class="token variable">$hide</span><span class="token punctuation">;</span>  
    <span class="token punctuation">}</span>   
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6211\u4EEC\u6765\u521B\u5EFA\u8FD9\u4E2A service \u7C7B\u7684\u5BF9\u5E94\u7684\u6D4B\u8BD5\u6587\u4EF6\uFF1A<code>tests/Clue/PayRecordServiceTest.php</code></p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>  
<span class="token keyword">namespace</span> <span class="token package">AppTest<span class="token punctuation">\\</span>Clue</span><span class="token punctuation">;</span>  
  
<span class="token keyword">use</span> <span class="token package">AppTest<span class="token punctuation">\\</span>BaseTest</span><span class="token punctuation">;</span>  
<span class="token keyword">use</span> <span class="token package">Service<span class="token punctuation">\\</span>Clue<span class="token punctuation">\\</span>PayRecordService</span><span class="token punctuation">;</span>  
  
<span class="token keyword">class</span> <span class="token class-name-definition class-name">PayRecordServiceTest</span> <span class="token keyword">extends</span> <span class="token class-name">BaseTest</span>  
<span class="token punctuation">{</span>  
    <span class="token keyword">protected</span> <span class="token variable">$service</span><span class="token punctuation">;</span>  
  
    <span class="token keyword">protected</span> <span class="token keyword">function</span> <span class="token function-definition function">setUp</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  
    <span class="token punctuation">{</span>  
        <span class="token keyword static-context">parent</span><span class="token operator">::</span><span class="token function">setUp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
        <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">service</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PayRecordService</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
    <span class="token punctuation">}</span>  
  
    <span class="token doc-comment comment">/**  
     * \u6D4B\u8BD5 \u662F\u5426\u663E\u793A\u5220\u9664\u6309\u94AE 
     */</span> 
    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">testFormatShowDeleteBtn</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  
    <span class="token punctuation">{</span>  
        <span class="token variable">$payRecord</span> <span class="token operator">=</span> <span class="token punctuation">[</span>  
            <span class="token string single-quoted-string">&#39;billed_money&#39;</span> <span class="token operator">=&gt;</span> <span class="token number">0</span><span class="token punctuation">,</span>  
            <span class="token string single-quoted-string">&#39;pay_type&#39;</span> <span class="token operator">=&gt;</span> <span class="token number">1</span><span class="token punctuation">,</span>  
            <span class="token string single-quoted-string">&#39;money_arrived_status&#39;</span> <span class="token operator">=&gt;</span> <span class="token number">1</span><span class="token punctuation">,</span>  
        <span class="token punctuation">]</span><span class="token punctuation">;</span>  
  
        <span class="token variable">$show</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">service</span><span class="token operator">-&gt;</span><span class="token function">formatShowDeleteBtn</span><span class="token punctuation">(</span><span class="token variable">$payRecord</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
        <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">assertTrue</span><span class="token punctuation">(</span><span class="token variable">$show</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
    <span class="token punctuation">}</span>  
<span class="token punctuation">}</span>
</span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u6267\u884C\u5355\u5143\u6D4B\u8BD5" tabindex="-1"><a class="header-anchor" href="#\u6267\u884C\u5355\u5143\u6D4B\u8BD5" aria-hidden="true">#</a> \u6267\u884C\u5355\u5143\u6D4B\u8BD5</h2><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment"># \u5207\u6362\u5230\u9879\u76EE\u6839\u76EE\u5F55</span>
$ <span class="token builtin class-name">cd</span> ~/webapp/xxx.demo.com

$ phpunit tests/Clue/PayRecordServiceTest <span class="token parameter variable">--bootstrap</span><span class="token operator">=</span>vendor/autoload.php

<span class="token comment"># \u6267\u884C\u7ED3\u679C\u5982\u4E0B</span>
PHPUnit <span class="token number">7.5</span>.20 by Sebastian Bergmann and contributors.

<span class="token builtin class-name">.</span>                                                                   <span class="token number">1</span> / <span class="token number">1</span> <span class="token punctuation">(</span><span class="token number">100</span>%<span class="token punctuation">)</span>

Time: <span class="token number">60</span> ms, Memory: <span class="token number">6.00</span> MB

OK <span class="token punctuation">(</span><span class="token number">1</span> test, <span class="token number">1</span> assertion<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u662F\u4E00\u4E2A\u975E\u5E38\u7B80\u5355\u7684\u6D4B\u8BD5\u7528\u4F8B\u7C7B\uFF0C\u53EF\u4EE5\u770B\u5230\uFF0C\u6267\u884C\u4E86\u51711\u4E2A\u6D4B\u8BD5\u7528\u4F8B\uFF0C\u51711\u4E2A\u65AD\u8A00\uFF0C\u7ED3\u679C\u6210\u529F\u3002</p><h2 id="\u4EE3\u7801\u8986\u76D6\u7387" tabindex="-1"><a class="header-anchor" href="#\u4EE3\u7801\u8986\u76D6\u7387" aria-hidden="true">#</a> \u4EE3\u7801\u8986\u76D6\u7387</h2><p>\u4EE3\u7801\u8986\u76D6\u7387\u53CD\u5E94\u7684\u662F<code>\u6D4B\u8BD5\u7528\u4F8B</code>\u5BF9<code>\u6D4B\u8BD5\u5BF9\u8C61</code>\u7684<code>\u884C\uFF0C\u51FD\u6570/\u65B9\u6CD5\uFF0C\u7C7B/\u7279\u8D28</code>\u7684\u8BBF\u95EE\u7387\u662F\u591A\u5C11(<code>PHP_CodeCoverage</code> \u5C1A\u4E0D\u652F\u6301 <code>Opcode\u8986\u76D6\u7387\u3001\u5206\u652F\u8986\u76D6\u7387 \u53CA \u8DEF\u5F84\u8986\u76D6\u7387</code>)\uFF0C\u867D\u7136\u6709\u5F88\u591A\u4EBA\u8BA4\u4E3A\u8FC7\u5206\u770B\u91CD\u8986\u76D6\u7387\u662F\u4E0D\u5BF9\u7684\uFF0C\u4F46\u6211\u4EEC\u521D\u5165\u6D4B\u8BD5\u8FD8\u662F\u4FD7\u6C14\u7684\u8FFD\u6C42\u4E00\u4E0B\u5427\u3002</p><p>\u6D4B\u8BD5\u8986\u76D6\u7387\u7684\u68C0\u6D4B\u5BF9\u8C61\u662F\u6211\u4EEC\u7684\u4E1A\u52A1\u4EE3\u7801\uFF0CPHPUnit\u901A\u8FC7\u68C0\u6D4B\u6211\u4EEC\u7F16\u5199\u7684\u6D4B\u8BD5\u7528\u4F8B\u8C03\u7528\u4E86\u54EA\u4E9B\u51FD\u6570\uFF0C\u54EA\u4E9B\u7C7B\uFF0C\u54EA\u4E9B\u65B9\u6CD5\uFF0C\u6BCF\u4E00\u4E2A\u63A7\u5236\u6D41\u7A0B\u662F\u5426\u90FD\u6267\u884C\u4E86\u4E00\u904D\u6765\u8BA1\u7B97\u8986\u76D6\u7387\u3002</p><p><code>PHPUnit</code> \u7684\u8986\u76D6\u7387\u4F9D\u8D56 <code>Xdebug</code>\uFF0C\u53EF\u4EE5\u751F\u6210\u591A\u79CD\u683C\u5F0F</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>\\--coverage-clover &lt;file\\&gt;    Generate code coverage report in Clover XML format.
--coverage-crap4j &lt;file\\&gt;    Generate code coverage report in Crap4J XML format.
--coverage-html &lt;dir\\&gt;       Generate code coverage report in HTML format.
--coverage-php &lt;file\\&gt;       Export PHP\\_CodeCoverage object to file.
--coverage-text=&lt;file\\&gt;      Generate code coverage report in text format.
--coverage-xml &lt;dir\\&gt;        Generate code coverage report in PHPUnit XML format.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u540C\u65F6\u9700\u8981\u4F7F\u7528 <code>--whitelist dir</code>\u53C2\u6570\u6765\u8BBE\u5B9A\u6211\u4EEC\u9700\u8981\u68C0\u6D4B\u8986\u76D6\u7387\u7684\u4E1A\u52A1\u4EE3\u7801\u8DEF\u5F84\uFF0C\u4E0B\u9762\u6F14\u793A\u4E00\u4E0B\u5177\u4F53\u64CD\u4F5C\uFF0C\u5728\u9879\u76EE\u76EE\u5F55\u4E0B\u6267\u884C\u4E0B\u9762\u7684\u547D\u4EE4\uFF1A</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>$ phpunit <span class="token punctuation">\\</span>
<span class="token parameter variable">--bootstrap</span> vendor/autoload.php <span class="token punctuation">\\</span>
--coverage-html<span class="token operator">=</span>reports/ <span class="token punctuation">\\</span>
<span class="token parameter variable">--whitelist</span> app/service/Clue/PayRecordService.php <span class="token punctuation">\\</span>
tests/Clue/PayRecordServiceTest
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u91CC <code>--coverage-html=reports</code> \u6307\u5B9A\u4E86\u62A5\u544A\u751F\u6210\u7684\u8DEF\u5F84\u662F\u9879\u76EE\u76EE\u5F55\u4E0B\u7684 <code>reports</code>\uFF0C\u6240\u4EE5\u6211\u4EEC\u53EF\u4EE5\u76F4\u63A5\u8BBF\u95EE\uFF1A<code>http://xxx.demo.com/reports/index.html</code> \u6765\u67E5\u770B\u62A5\u544A\uFF1A</p><p><img src="`+i+`" alt="" loading="lazy"></p><p>\u8FD9\u6837\u6211\u4EEC\u5C31\u5BF9\u4E1A\u52A1\u4EE3\u7801<code>service/PayRecordService.php</code>\u505A\u5355\u5143\u6D4B\u8BD5\uFF0C\u5E76\u4E14\u83B7\u5F97\u6211\u4EEC\u5355\u5143\u6D4B\u8BD5\u7684\u4EE3\u7801\u8986\u76D6\u7387\uFF0C\u73B0\u5728\u8986\u76D6\u7387\u53EA\u6709 3.38%\uFF0C\u56E0\u4E3A\u6211\u7684\u6D4B\u8BD5\u7528\u4F8B\u53EA\u8BBF\u95EE\u4E86<code>app/service/Clue/PayRecordService.php</code>\u7684\u4E00\u4E2A\u65B9\u6CD5\uFF0C\u8FD8\u6709\u5F88\u591A\u5176\u4ED6\u65B9\u6CD5\u5E76\u6CA1\u6709\u6D4B\u8BD5\u5230\uFF0C\u5F00\u53D1\u4E2D\u5219\u80FD\u4F53\u73B0\u51FA\u4F60\u7684\u6D4B\u8BD5\u65F6\u7528\u529B\u5BF9\u4E1A\u52A1\u4EE3\u7801\u6D4B\u8BD5\u5EA6\u7684\u5B8C\u5584\u6027\u3002</p><h2 id="\u4F7F\u7528phpunit-xml\u7F16\u6392\u6D4B\u8BD5\u5957\u4EF6" tabindex="-1"><a class="header-anchor" href="#\u4F7F\u7528phpunit-xml\u7F16\u6392\u6D4B\u8BD5\u5957\u4EF6" aria-hidden="true">#</a> \u4F7F\u7528phpunit.xml\u7F16\u6392\u6D4B\u8BD5\u5957\u4EF6</h2><p>PHPUnit \u63D0\u4F9B\u4E86 <code>phpunit.xml</code> <sup class="footnote-ref"><a href="#footnote1">[1]</a><a class="footnote-anchor" id="footnote-ref1"></a></sup>\u7528\u6765\u914D\u7F6E\u7BA1\u7406\u6D4B\u8BD5\u3002</p><p>\u8FD9\u662F\u4E00\u4E2A\u793A\u4F8B\uFF1A</p><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token prolog">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>phpunit</span> <span class="token attr-name">backupGlobals</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>false<span class="token punctuation">&quot;</span></span>
         <span class="token attr-name">backupStaticAttributes</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>false<span class="token punctuation">&quot;</span></span>
         <span class="token attr-name">bootstrap</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>./vendor/autoload.php<span class="token punctuation">&quot;</span></span>
         <span class="token attr-name">colors</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>true<span class="token punctuation">&quot;</span></span>
         <span class="token attr-name">convertErrorsToExceptions</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>true<span class="token punctuation">&quot;</span></span>
         <span class="token attr-name">convertNoticesToExceptions</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>true<span class="token punctuation">&quot;</span></span>
         <span class="token attr-name">convertWarningsToExceptions</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>true<span class="token punctuation">&quot;</span></span>
         <span class="token attr-name">processIsolation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>false<span class="token punctuation">&quot;</span></span>
         <span class="token attr-name">stopOnFailure</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>false<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>testsuites</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>testsuite</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>PayRecordService<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>directory</span><span class="token punctuation">&gt;</span></span>./tests/Clue<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>directory</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>testsuite</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>testsuites</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filter</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>whitelist</span> <span class="token attr-name">processUncoveredFilesFromWhitelist</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>true<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
            <span class="token comment">&lt;!--\u53EF\u4EE5\u5B9A\u4E49\u591A\u4E2A \u5BF9./app/service/Clue/PayRecordService.php \u4E0B\u7684\u4E1A\u52A1\u4EE3\u7801\u505A\u8986\u76D6\u7387\u7EDF\u8BA1--&gt;</span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>directory</span><span class="token punctuation">&gt;</span></span>./app/service/Clue/PayRecordService.php<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>directory</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>whitelist</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>filter</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>logging</span><span class="token punctuation">&gt;</span></span>
        <span class="token comment">&lt;!--\u8986\u76D6\u7387\u62A5\u544A\u751F\u6210\u7C7B\u578B\u548C\u8F93\u51FA\u76EE\u5F55 lowUpperBound\u4F4E\u8986\u76D6\u7387\u9608\u503C highLowerBound\u9AD8\u8986\u76D6\u7387\u9608\u503C--&gt;</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>log</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>coverage-html<span class="token punctuation">&quot;</span></span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>./reports<span class="token punctuation">&quot;</span></span> <span class="token attr-name">lowUpperBound</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>35<span class="token punctuation">&quot;</span></span> <span class="token attr-name">highLowerBound</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>70<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>logging</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>phpunit</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7136\u540E\u76F4\u63A5\u8FD0\u884C <code>phpunit</code> \u884C\u5373\u53EF\uFF1A</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>$ phpunit 

PHPUnit <span class="token number">6.5</span>.14 by Sebastian Bergmann and contributors.

Time: <span class="token number">81</span> ms, Memory: <span class="token number">4</span>.00MB

No tests executed<span class="token operator">!</span>

Generating code coverage report <span class="token keyword">in</span> HTML <span class="token function">format</span> <span class="token punctuation">..</span>. <span class="token keyword">done</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u63A5\u53E3\u6D4B\u8BD5" tabindex="-1"><a class="header-anchor" href="#\u63A5\u53E3\u6D4B\u8BD5" aria-hidden="true">#</a> \u63A5\u53E3\u6D4B\u8BD5</h3><p><strong>1. curl \u8BF7\u6C42\u63A5\u53E3\uFF0C\u6D4B\u8BD5\u8FD4\u56DE\u503C</strong></p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>  
  
<span class="token keyword">namespace</span> <span class="token package">AppTest<span class="token punctuation">\\</span>Api</span><span class="token punctuation">;</span>  
<span class="token keyword">use</span> <span class="token package">PHPUnit<span class="token punctuation">\\</span>Framework<span class="token punctuation">\\</span>TestCase</span><span class="token punctuation">;</span>  
  
<span class="token doc-comment comment">/**  
 * Class ClueSeller */</span><span class="token keyword">class</span> <span class="token class-name-definition class-name">ClueSeller</span> <span class="token keyword">extends</span> <span class="token class-name">TestCase</span>  
<span class="token punctuation">{</span>  
    <span class="token keyword">protected</span> <span class="token variable">$baseUrl</span><span class="token punctuation">;</span>  
    <span class="token keyword">protected</span> <span class="token variable">$httpClient</span><span class="token punctuation">;</span>  
    <span class="token keyword">protected</span> <span class="token variable">$options</span><span class="token punctuation">;</span>  
  
    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">setUp</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  
    <span class="token punctuation">{</span>  
        <span class="token keyword static-context">parent</span><span class="token operator">::</span><span class="token function">setUp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
        <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">baseUrl</span> <span class="token operator">=</span> <span class="token string single-quoted-string">&#39;http://xxx.demo.com/api/clue_sellcar/&#39;</span><span class="token punctuation">;</span>  
        <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">httpClient</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name class-name-fully-qualified"><span class="token punctuation">\\</span>GuzzleHttp<span class="token punctuation">\\</span>Client</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
        <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">options</span> <span class="token operator">=</span> <span class="token punctuation">[</span>  
            <span class="token string single-quoted-string">&#39;cookies&#39;</span> <span class="token operator">=&gt;</span> <span class="token class-name class-name-fully-qualified static-context"><span class="token punctuation">\\</span>GuzzleHttp<span class="token punctuation">\\</span>Cookie<span class="token punctuation">\\</span>CookieJar</span><span class="token operator">::</span><span class="token function">fromArray</span><span class="token punctuation">(</span><span class="token punctuation">[</span>  
                <span class="token string single-quoted-string">&#39;cid&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;8eaf5efef1e2b774f2d2e8d4789ef8f5616d68ee&#39;</span><span class="token punctuation">,</span>  
            <span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;cp.ceshi.che300.com&#39;</span><span class="token punctuation">)</span>  
        <span class="token punctuation">]</span><span class="token punctuation">;</span>  
    <span class="token punctuation">}</span>  
  
    <span class="token keyword">protected</span> <span class="token keyword">function</span> <span class="token function-definition function">getResponse</span><span class="token punctuation">(</span><span class="token variable">$uri</span><span class="token punctuation">)</span>  
    <span class="token punctuation">{</span>  
        <span class="token variable">$response</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">httpClient</span><span class="token operator">-&gt;</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">baseUrl</span> <span class="token operator">.</span> <span class="token variable">$uri</span><span class="token punctuation">,</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">options</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
        <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">assertSame</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">,</span> <span class="token variable">$response</span><span class="token operator">-&gt;</span><span class="token function">getStatusCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
        <span class="token keyword">return</span> <span class="token function">json_decode</span><span class="token punctuation">(</span><span class="token variable">$response</span><span class="token operator">-&gt;</span><span class="token function">getBody</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token constant boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
    <span class="token punctuation">}</span>  
  
    <span class="token doc-comment comment">/**  
 * \u6D4B\u8BD5\u8D26\u5355\u5217\u8868 - \u662F\u5426\u6709\u6570\u636E */</span> <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">testBillList</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  
    <span class="token punctuation">{</span>  
        <span class="token variable">$response</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">getResponse</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;bill_list&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
        <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">assertIsArray</span><span class="token punctuation">(</span><span class="token variable">$response</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
        <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">assertSame</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token variable">$response</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;code&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token variable">$response</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;msg&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
        <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">assertNotEmpty</span><span class="token punctuation">(</span><span class="token variable">$response</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;data&#39;</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;list&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
    <span class="token punctuation">}</span>  
  
    <span class="token doc-comment comment">/**  
 * \u6D4B\u8BD5\u8D26\u5355\u5217\u8868 - \u7B5B\u9009\u6761\u4EF6 - \u65F6\u95F4 */</span> <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">testBillListDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  
    <span class="token punctuation">{</span>  
        <span class="token variable">$response</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">getResponse</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;bill_list?date_start=2021-09-01&amp;date_end=2021-11-16&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
        <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">assertIsArray</span><span class="token punctuation">(</span><span class="token variable">$response</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
        <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">assertSame</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token variable">$response</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;code&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token variable">$response</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;msg&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
        <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">assertNotEmpty</span><span class="token punctuation">(</span><span class="token variable">$response</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;data&#39;</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;list&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
    <span class="token punctuation">}</span>
</span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>2. \u51C6\u5907\u597D\u73AF\u5883\u53D8\u91CF\uFF0C\u5168\u5C40\u53D8\u91CF\uFF0C\u7528\u6237\u72B6\u6001\u7B49\u6570\u636E\uFF0C\u7136\u540E <code>require index.php</code> \u6267\u884C\u4EE3\u7801</strong></p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>

<span class="token keyword">namespace</span> <span class="token package">AppTest<span class="token punctuation">\\</span>Api</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token package">PHPUnit<span class="token punctuation">\\</span>Framework<span class="token punctuation">\\</span>TestCase</span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * Class ClueSeller
 */</span>
<span class="token keyword">class</span> <span class="token class-name-definition class-name">ClueSeller2</span> <span class="token keyword">extends</span> <span class="token class-name">TestCase</span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">setUp</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword static-context">parent</span><span class="token operator">::</span><span class="token function">setUp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token variable">$possible_files</span> <span class="token operator">=</span> <span class="token punctuation">[</span>
            <span class="token string single-quoted-string">&#39;/etc/nginx/cron.conf&#39;</span><span class="token punctuation">,</span>
            <span class="token string single-quoted-string">&#39;/opt/nginx/etc/cron.conf&#39;</span><span class="token punctuation">,</span>
            <span class="token string single-quoted-string">&#39;/opt/lampp/etc/extra/cronconfig/cron.conf&#39;</span><span class="token punctuation">,</span>
            <span class="token string single-quoted-string">&#39;/usr/local/etc/nginx/cron.conf&#39;</span>
        <span class="token punctuation">]</span><span class="token punctuation">;</span>

        <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token variable">$possible_files</span> <span class="token keyword">as</span> <span class="token variable">$env_conf</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">file_exists</span><span class="token punctuation">(</span><span class="token variable">$env_conf</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token variable">$conf</span> <span class="token operator">=</span> <span class="token function">parse_ini_file</span><span class="token punctuation">(</span><span class="token variable">$env_conf</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token variable">$conf</span> <span class="token keyword">as</span> <span class="token variable">$k</span> <span class="token operator">=&gt;</span> <span class="token variable">$v</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token variable">$_SERVER</span><span class="token punctuation">[</span><span class="token variable">$k</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token variable">$v</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;mastername&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string single-quoted-string">&#39;ffsong&#39;</span><span class="token punctuation">;</span>
        <span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;masterid&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">58</span><span class="token punctuation">;</span>
        <span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;res&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>
            <span class="token string single-quoted-string">&#39;clue_dealer&#39;</span> <span class="token operator">=&gt;</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">]</span>
        <span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token variable">$_SERVER</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;argv&#39;</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string single-quoted-string">&#39;api/Clue_sellcar&#39;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * \u6D4B\u8BD5 clue_sellcar/bill_list \u63A5\u53E3
     * <span class="token keyword">@runInSeparateProcess</span>
     * <span class="token keyword">@preserveGlobalState</span> disabled
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">testBillList</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token variable">$_SERVER</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;argv&#39;</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string single-quoted-string">&#39;bill_list&#39;</span><span class="token punctuation">;</span>
        <span class="token variable">$_GET</span> <span class="token operator">=</span> <span class="token punctuation">[</span>
            <span class="token string single-quoted-string">&#39;date_start&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;2021-01-01&#39;</span><span class="token punctuation">,</span>
            <span class="token string single-quoted-string">&#39;date_end&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;2021-11-16&#39;</span><span class="token punctuation">,</span>
        <span class="token punctuation">]</span><span class="token punctuation">;</span>

        <span class="token keyword">require</span> <span class="token constant">__DIR__</span> <span class="token operator">.</span> <span class="token string single-quoted-string">&#39;/../../index.php&#39;</span><span class="token punctuation">;</span>
        <span class="token variable">$res</span> <span class="token operator">=</span> <span class="token function">json_decode</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">getActualOutput</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token constant boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// \u83B7\u53D6\u8F93\u51FA\u7ED3\u679C</span>
        <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">assertNotEmpty</span><span class="token punctuation">(</span><span class="token variable">$res</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;data&#39;</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;list&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * \u6D4B\u8BD5 clue_sellcar/bill_list \u63A5\u53E3
     * <span class="token keyword">@runInSeparateProcess</span>
     * <span class="token keyword">@preserveGlobalState</span> disabled
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">testBillListDealer</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token variable">$_SERVER</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;argv&#39;</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string single-quoted-string">&#39;bill_list&#39;</span><span class="token punctuation">;</span>
        <span class="token variable">$_GET</span> <span class="token operator">=</span> <span class="token punctuation">[</span>
            <span class="token string single-quoted-string">&#39;date_start&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;2021-01-01&#39;</span><span class="token punctuation">,</span>
            <span class="token string single-quoted-string">&#39;date_end&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;2021-11-16&#39;</span><span class="token punctuation">,</span>
            <span class="token string single-quoted-string">&#39;dealer_id&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;A&#39;</span><span class="token punctuation">,</span>
        <span class="token punctuation">]</span><span class="token punctuation">;</span>

        <span class="token keyword">require</span> <span class="token constant">__DIR__</span> <span class="token operator">.</span> <span class="token string single-quoted-string">&#39;/../../index.php&#39;</span><span class="token punctuation">;</span>
        <span class="token variable">$res</span> <span class="token operator">=</span> <span class="token function">json_decode</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">getActualOutput</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token constant boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// \u83B7\u53D6\u8F93\u51FA\u7ED3\u679C</span>
        <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">assertNotEmpty</span><span class="token punctuation">(</span><span class="token variable">$res</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;data&#39;</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;list&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u540E\u7EED" tabindex="-1"><a class="header-anchor" href="#\u540E\u7EED" aria-hidden="true">#</a> \u540E\u7EED</h2>`,33),d={href:"https://www.jianshu.com/p/e952dd3ff969",target:"_blank",rel:"noopener noreferrer"},k=n("h2",{id:"\u53C2\u8003",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u53C2\u8003","aria-hidden":"true"},"#"),s(" \u53C2\u8003")],-1),v={href:"https://segmentfault.com/a/1190000018426487",target:"_blank",rel:"noopener noreferrer"},m={href:"https://phpunit.readthedocs.io/zh_CN/latest/writing-tests-for-phpunit.html",target:"_blank",rel:"noopener noreferrer"},b={href:"https://blog.csdn.net/u011832039/article/details/50343109",target:"_blank",rel:"noopener noreferrer"},g={href:"https://segmentfault.com/q/1010000018201343",target:"_blank",rel:"noopener noreferrer"},h={href:"http://fe.che300.com/easymock/wikiCatalog/wysiwyg/6177f4b4f16124356f48694c",target:"_blank",rel:"noopener noreferrer"},f=n("hr",{class:"footnotes-sep"},null,-1),y={class:"footnotes"},_={class:"footnotes-list"},q={id:"footnote1",class:"footnote-item"},w={href:"https://phpunit.readthedocs.io/zh_CN/latest/configuration.html#appendixes-configuration",target:"_blank",rel:"noopener noreferrer"},$=n("a",{href:"#footnote-ref1",class:"footnote-backref"},"\u21A9\uFE0E",-1);function x(S,P){const a=l("ExternalLinkIcon");return p(),o("div",null,[r,n("ul",null,[n("li",null,[n("a",d,[s("\u57FA\u4E8EGitlab\u5B9E\u73B0\u81EA\u52A8\u5316\u5355\u5143\u6D4B\u8BD5"),t(a)])])]),k,n("ul",null,[n("li",null,[n("a",v,[s("https://segmentfault.com/a/1190000018426487"),t(a)])]),n("li",null,[n("a",m,[s("https://phpunit.readthedocs.io/zh_CN/latest/writing-tests-for-phpunit.html"),t(a)])]),n("li",null,[n("a",b,[s("https://blog.csdn.net/u011832039/article/details/50343109"),t(a)])]),n("li",null,[n("a",g,[s("https://segmentfault.com/q/1010000018201343"),t(a)])]),n("li",null,[n("a",h,[s("http://fe.che300.com/easymock/wikiCatalog/wysiwyg/6177f4b4f16124356f48694c"),t(a)])])]),f,n("section",y,[n("ol",_,[n("li",q,[n("p",null,[n("a",w,[s("XML \u914D\u7F6E\u6587\u4EF6 - PHPUnit latest \u624B\u518C"),t(a)]),s(),$])])])])])}const T=e(u,[["render",x],["__file","2021-11-16-unit-testing-with-phpunit.html.vue"]]);export{T as default};
